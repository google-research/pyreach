# Copyright 2021 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: log_entry_reach.proto

from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import logs_pb2 as logs__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='log_entry_reach.proto',
  package='robotics.logging.messages',
  syntax='proto2',
  serialized_options=b'Z#project-reach/pkg/rc/logentryprotos',
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\x15log_entry_reach.proto\x12\x19robotics.logging.messages\x1a\nlogs.proto\"\xf1\x01\n\x0cReachPayload\x12<\n\x0c\x63ommand_data\x18\x01 \x01(\x0b\x32$.robotics.learning.reach.CommandDataH\x00\x12:\n\x0b\x64\x65vice_data\x18\x02 \x01(\x0b\x32#.robotics.learning.reach.DeviceDataH\x00\x12?\n\x0fserver_log_data\x18\x04 \x01(\x0b\x32$.robotics.learning.reach.TextLogDataH\x00\x12\x1e\n\x16reach_serve_session_id\x18\x03 \x01(\tB\x06\n\x04\x64\x61taB%Z#project-reach/pkg/rc/logentryprotos'
  ,
  dependencies=[logs__pb2.DESCRIPTOR,])




_REACHPAYLOAD = _descriptor.Descriptor(
  name='ReachPayload',
  full_name='robotics.logging.messages.ReachPayload',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='command_data', full_name='robotics.logging.messages.ReachPayload.command_data', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='device_data', full_name='robotics.logging.messages.ReachPayload.device_data', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='server_log_data', full_name='robotics.logging.messages.ReachPayload.server_log_data', index=2,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='reach_serve_session_id', full_name='robotics.logging.messages.ReachPayload.reach_serve_session_id', index=3,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='data', full_name='robotics.logging.messages.ReachPayload.data',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=65,
  serialized_end=306,
)

_REACHPAYLOAD.fields_by_name['command_data'].message_type = logs__pb2._COMMANDDATA
_REACHPAYLOAD.fields_by_name['device_data'].message_type = logs__pb2._DEVICEDATA
_REACHPAYLOAD.fields_by_name['server_log_data'].message_type = logs__pb2._TEXTLOGDATA
_REACHPAYLOAD.oneofs_by_name['data'].fields.append(
  _REACHPAYLOAD.fields_by_name['command_data'])
_REACHPAYLOAD.fields_by_name['command_data'].containing_oneof = _REACHPAYLOAD.oneofs_by_name['data']
_REACHPAYLOAD.oneofs_by_name['data'].fields.append(
  _REACHPAYLOAD.fields_by_name['device_data'])
_REACHPAYLOAD.fields_by_name['device_data'].containing_oneof = _REACHPAYLOAD.oneofs_by_name['data']
_REACHPAYLOAD.oneofs_by_name['data'].fields.append(
  _REACHPAYLOAD.fields_by_name['server_log_data'])
_REACHPAYLOAD.fields_by_name['server_log_data'].containing_oneof = _REACHPAYLOAD.oneofs_by_name['data']
DESCRIPTOR.message_types_by_name['ReachPayload'] = _REACHPAYLOAD
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

ReachPayload = _reflection.GeneratedProtocolMessageType('ReachPayload', (_message.Message,), {
  'DESCRIPTOR' : _REACHPAYLOAD,
  '__module__' : 'log_entry_reach_pb2'
  # @@protoc_insertion_point(class_scope:robotics.logging.messages.ReachPayload)
  })
_sym_db.RegisterMessage(ReachPayload)


DESCRIPTOR._options = None
# @@protoc_insertion_point(module_scope)

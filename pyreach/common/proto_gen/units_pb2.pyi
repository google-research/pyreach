# Copyright 2021 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class _UnitType:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _UnitTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_UnitType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    UNSPECIFIED_UNIT: UnitType.ValueType = ...  # 0
    TIME_UNIT: UnitType.ValueType = ...  # 65536
    ANGLE_UNIT: UnitType.ValueType = ...  # 131072
    LENGTH_UNIT: UnitType.ValueType = ...  # 196608
    ANGULAR_VELOCITY_UNIT: UnitType.ValueType = ...  # 262144
    VELOCITY_UNIT: UnitType.ValueType = ...  # 327680
    ANGULAR_ACCELERATION_UNIT: UnitType.ValueType = ...  # 393216
    ACCELERATION_UNIT: UnitType.ValueType = ...  # 458752
    ANGULAR_JERK_UNIT: UnitType.ValueType = ...  # 524288
    JERK_UNIT: UnitType.ValueType = ...  # 589824
    TORQUE_UNIT: UnitType.ValueType = ...  # 1048576
    FORCE_UNIT: UnitType.ValueType = ...  # 1114112
    CURRENT_UNIT: UnitType.ValueType = ...  # 1179648
    INT_TIME_TICK_UNIT: UnitType.ValueType = ...  # 1245184
    TEMPERATURE_UNIT: UnitType.ValueType = ...  # 1310720
class UnitType(_UnitType, metaclass=_UnitTypeEnumTypeWrapper):
    """List of canonical units that are used in canonical data types and their APIs.

    All units of different domains are listed in a single enum type so this won't
    confuse dynamic / weak type systems like Python.

    Types of units. Unit type values are multiple of 0x10000.
    """
    pass

UNSPECIFIED_UNIT: UnitType.ValueType = ...  # 0
TIME_UNIT: UnitType.ValueType = ...  # 65536
ANGLE_UNIT: UnitType.ValueType = ...  # 131072
LENGTH_UNIT: UnitType.ValueType = ...  # 196608
ANGULAR_VELOCITY_UNIT: UnitType.ValueType = ...  # 262144
VELOCITY_UNIT: UnitType.ValueType = ...  # 327680
ANGULAR_ACCELERATION_UNIT: UnitType.ValueType = ...  # 393216
ACCELERATION_UNIT: UnitType.ValueType = ...  # 458752
ANGULAR_JERK_UNIT: UnitType.ValueType = ...  # 524288
JERK_UNIT: UnitType.ValueType = ...  # 589824
TORQUE_UNIT: UnitType.ValueType = ...  # 1048576
FORCE_UNIT: UnitType.ValueType = ...  # 1114112
CURRENT_UNIT: UnitType.ValueType = ...  # 1179648
INT_TIME_TICK_UNIT: UnitType.ValueType = ...  # 1245184
TEMPERATURE_UNIT: UnitType.ValueType = ...  # 1310720
global___UnitType = UnitType


class _Unit:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _UnitEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Unit.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    UNSPECIFIED: Unit.ValueType = ...  # 0
    UNITLESS: Unit.ValueType = ...  # 1
    SECONDS: Unit.ValueType = ...  # 65536
    """Time units. It is for real value time measurement only, such as time
    between two events, etc. It should not be used as a timestamp key.
    """

    MILLISECONDS: Unit.ValueType = ...  # 65537
    MICROSECONDS: Unit.ValueType = ...  # 65538
    NANOSECONDS: Unit.ValueType = ...  # 65539
    MINUTES: Unit.ValueType = ...  # 65540
    HOURS: Unit.ValueType = ...  # 65541
    RADIANS: Unit.ValueType = ...  # 131072
    """Angle units"""

    DEGREES: Unit.ValueType = ...  # 131073
    METERS: Unit.ValueType = ...  # 196608
    """Length units."""

    MILLIMETERS: Unit.ValueType = ...  # 196609
    INCHES: Unit.ValueType = ...  # 196610
    RADIANS_PER_SEC: Unit.ValueType = ...  # 262144
    """Angular velocity units."""

    DEGREES_PER_SEC: Unit.ValueType = ...  # 262145
    METERS_PER_SEC: Unit.ValueType = ...  # 327680
    """Velocity units."""

    KILOMETERS_PER_HOUR: Unit.ValueType = ...  # 327681
    RADIANS_PER_SEC2: Unit.ValueType = ...  # 393216
    """Angular acceleration units."""

    DEGREES_PER_SEC2: Unit.ValueType = ...  # 393217
    METERS_PER_SEC2: Unit.ValueType = ...  # 458752
    """Acceleration units."""

    EARTH_AVERAGE_G: Unit.ValueType = ...  # 458753
    RADIANS_PER_SEC3: Unit.ValueType = ...  # 524288
    """Angular jerk units."""

    DEGREES_PER_SEC3: Unit.ValueType = ...  # 524289
    METERS_PER_SEC3: Unit.ValueType = ...  # 589824
    """Jerk units."""

    MILLIMETER_PER_SEC3: Unit.ValueType = ...  # 589825
    NEWTON_METERS: Unit.ValueType = ...  # 1048576
    """Torque units."""

    FOOT_POUNDS: Unit.ValueType = ...  # 1048577
    OUNCE_INCHES: Unit.ValueType = ...  # 1048578
    NEWTONS: Unit.ValueType = ...  # 1114112
    """Force units."""

    KILOGRAM_FORCE: Unit.ValueType = ...  # 1114113
    AMPERES: Unit.ValueType = ...  # 1179648
    """Current units."""

    MILLIAMPERES: Unit.ValueType = ...  # 1179649
    INT_TIME_TICK: Unit.ValueType = ...  # 1245184
    """Time ticks units in int64. This is the unit for timestamp, etc that
    can be used as keys. Use regular time units above if time is a real value
    measurement. Unit conversion is not available to regular time units since
    unit conversion does not cover definition of time domain nor correct for
    time drift, etc.
    """

    CELSIUS: Unit.ValueType = ...  # 1310720
    """Temperature units."""

    FAHRENHEIT: Unit.ValueType = ...  # 1310721
    KELVIN: Unit.ValueType = ...  # 1310722
class Unit(_Unit, metaclass=_UnitEnumTypeWrapper):
    """Definition of units. Values of unit are defined as values of unit type + N
    (N >= 0). For each type, conversion to default unit of the same unit type
    must also be defined in units.cc. Value associated with unit defaults to
    double, unless specified otherwise.
    """
    pass

UNSPECIFIED: Unit.ValueType = ...  # 0
UNITLESS: Unit.ValueType = ...  # 1
SECONDS: Unit.ValueType = ...  # 65536
"""Time units. It is for real value time measurement only, such as time
between two events, etc. It should not be used as a timestamp key.
"""

MILLISECONDS: Unit.ValueType = ...  # 65537
MICROSECONDS: Unit.ValueType = ...  # 65538
NANOSECONDS: Unit.ValueType = ...  # 65539
MINUTES: Unit.ValueType = ...  # 65540
HOURS: Unit.ValueType = ...  # 65541
RADIANS: Unit.ValueType = ...  # 131072
"""Angle units"""

DEGREES: Unit.ValueType = ...  # 131073
METERS: Unit.ValueType = ...  # 196608
"""Length units."""

MILLIMETERS: Unit.ValueType = ...  # 196609
INCHES: Unit.ValueType = ...  # 196610
RADIANS_PER_SEC: Unit.ValueType = ...  # 262144
"""Angular velocity units."""

DEGREES_PER_SEC: Unit.ValueType = ...  # 262145
METERS_PER_SEC: Unit.ValueType = ...  # 327680
"""Velocity units."""

KILOMETERS_PER_HOUR: Unit.ValueType = ...  # 327681
RADIANS_PER_SEC2: Unit.ValueType = ...  # 393216
"""Angular acceleration units."""

DEGREES_PER_SEC2: Unit.ValueType = ...  # 393217
METERS_PER_SEC2: Unit.ValueType = ...  # 458752
"""Acceleration units."""

EARTH_AVERAGE_G: Unit.ValueType = ...  # 458753
RADIANS_PER_SEC3: Unit.ValueType = ...  # 524288
"""Angular jerk units."""

DEGREES_PER_SEC3: Unit.ValueType = ...  # 524289
METERS_PER_SEC3: Unit.ValueType = ...  # 589824
"""Jerk units."""

MILLIMETER_PER_SEC3: Unit.ValueType = ...  # 589825
NEWTON_METERS: Unit.ValueType = ...  # 1048576
"""Torque units."""

FOOT_POUNDS: Unit.ValueType = ...  # 1048577
OUNCE_INCHES: Unit.ValueType = ...  # 1048578
NEWTONS: Unit.ValueType = ...  # 1114112
"""Force units."""

KILOGRAM_FORCE: Unit.ValueType = ...  # 1114113
AMPERES: Unit.ValueType = ...  # 1179648
"""Current units."""

MILLIAMPERES: Unit.ValueType = ...  # 1179649
INT_TIME_TICK: Unit.ValueType = ...  # 1245184
"""Time ticks units in int64. This is the unit for timestamp, etc that
can be used as keys. Use regular time units above if time is a real value
measurement. Unit conversion is not available to regular time units since
unit conversion does not cover definition of time domain nor correct for
time drift, etc.
"""

CELSIUS: Unit.ValueType = ...  # 1310720
"""Temperature units."""

FAHRENHEIT: Unit.ValueType = ...  # 1310721
KELVIN: Unit.ValueType = ...  # 1310722
global___Unit = Unit


class DomainTimestamp(google.protobuf.message.Message):
    """Timestamp with explicit domain, allow tagging objects with multiple
    timestamps under different, probably all drifted clock domains.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CLOCK_DOMAIN_FIELD_NUMBER: builtins.int
    UNIT_FIELD_NUMBER: builtins.int
    VALUE_FIELD_NUMBER: builtins.int
    clock_domain: typing.Text = ...
    """A robot / project specific clock domain, like "camera/acquisition" for
    acquisition time on camera clock.
    """

    unit: global___Unit.ValueType = ...
    value: builtins.int = ...
    def __init__(self,
        *,
        clock_domain : typing.Optional[typing.Text] = ...,
        unit : typing.Optional[global___Unit.ValueType] = ...,
        value : typing.Optional[builtins.int] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["clock_domain",b"clock_domain","unit",b"unit","value",b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["clock_domain",b"clock_domain","unit",b"unit","value",b"value"]) -> None: ...
global___DomainTimestamp = DomainTimestamp

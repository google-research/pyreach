# Copyright 2021 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.message
import quaternion_pb2
import typing
import typing_extensions
import vector_pb2

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class Pose3d(google.protobuf.message.Message):
    """A pose in three-dimensional space."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    TRANSLATION_FIELD_NUMBER: builtins.int
    ROTATION_FIELD_NUMBER: builtins.int
    @property
    def translation(self) -> vector_pb2.Vector3d:
        """The translation, in meters."""
        pass
    @property
    def rotation(self) -> quaternion_pb2.Quaterniond:
        """The orientation as a quaternion."""
        pass
    def __init__(self,
        *,
        translation: typing.Optional[vector_pb2.Vector3d] = ...,
        rotation: typing.Optional[quaternion_pb2.Quaterniond] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["rotation",b"rotation","translation",b"translation"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["rotation",b"rotation","translation",b"translation"]) -> None: ...
global___Pose3d = Pose3d

class Pose3f(google.protobuf.message.Message):
    """A pose in three-dimensional space."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    TRANSLATION_FIELD_NUMBER: builtins.int
    ROTATION_FIELD_NUMBER: builtins.int
    @property
    def translation(self) -> vector_pb2.Vector3f:
        """The position, in meters."""
        pass
    @property
    def rotation(self) -> quaternion_pb2.Quaternionf:
        """The orientation as a quaternion."""
        pass
    def __init__(self,
        *,
        translation: typing.Optional[vector_pb2.Vector3f] = ...,
        rotation: typing.Optional[quaternion_pb2.Quaternionf] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["rotation",b"rotation","translation",b"translation"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["rotation",b"rotation","translation",b"translation"]) -> None: ...
global___Pose3f = Pose3f

class Pose2d(google.protobuf.message.Message):
    """A pose in two-dimensional space."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    TRANSLATION_FIELD_NUMBER: builtins.int
    ROTATION_FIELD_NUMBER: builtins.int
    @property
    def translation(self) -> vector_pb2.Vector2d:
        """The translation, in meters."""
        pass
    rotation: builtins.float
    """Rotation angle in radians."""

    def __init__(self,
        *,
        translation: typing.Optional[vector_pb2.Vector2d] = ...,
        rotation: builtins.float = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["translation",b"translation"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["rotation",b"rotation","translation",b"translation"]) -> None: ...
global___Pose2d = Pose2d

class Pose2f(google.protobuf.message.Message):
    """A pose in two-dimensional space."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    TRANSLATION_FIELD_NUMBER: builtins.int
    ROTATION_FIELD_NUMBER: builtins.int
    @property
    def translation(self) -> vector_pb2.Vector2f:
        """The translation, in meters."""
        pass
    rotation: builtins.float
    """Rotation angle in radians."""

    def __init__(self,
        *,
        translation: typing.Optional[vector_pb2.Vector2f] = ...,
        rotation: builtins.float = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["translation",b"translation"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["rotation",b"rotation","translation",b"translation"]) -> None: ...
global___Pose2f = Pose2f

class Rotation2d(google.protobuf.message.Message):
    """A rotation about the origin in two dimensions, represented as (cos, sin)."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    COS_ANGLE_FIELD_NUMBER: builtins.int
    SIN_ANGLE_FIELD_NUMBER: builtins.int
    cos_angle: builtins.float
    sin_angle: builtins.float
    def __init__(self,
        *,
        cos_angle: builtins.float = ...,
        sin_angle: builtins.float = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cos_angle",b"cos_angle","sin_angle",b"sin_angle"]) -> None: ...
global___Rotation2d = Rotation2d

class Rotation2f(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    COS_ANGLE_FIELD_NUMBER: builtins.int
    SIN_ANGLE_FIELD_NUMBER: builtins.int
    cos_angle: builtins.float
    sin_angle: builtins.float
    def __init__(self,
        *,
        cos_angle: builtins.float = ...,
        sin_angle: builtins.float = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cos_angle",b"cos_angle","sin_angle",b"sin_angle"]) -> None: ...
global___Rotation2f = Rotation2f

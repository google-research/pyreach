# Copyright 2021 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class SimCommand(google.protobuf.message.Message):
    """SimCommand is the top level command sent to a sim adapter.
    Examples of serialized JSON are:
      {"id":"1","world":{"type":"RESET"}}
      {"id":"1","arm":{"type":"TO","target_joint_angles":[0,0,0,0,0,0]}}
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ID_FIELD_NUMBER: builtins.int
    WORLD_FIELD_NUMBER: builtins.int
    ARM_FIELD_NUMBER: builtins.int
    EXIT_FIELD_NUMBER: builtins.int
    id: builtins.int = ...
    @property
    def world(self) -> global___WorldCommand: ...
    @property
    def arm(self) -> global___ArmCommand: ...
    @property
    def exit(self) -> global___ExitCommand: ...
    def __init__(self,
        *,
        id : builtins.int = ...,
        world : typing.Optional[global___WorldCommand] = ...,
        arm : typing.Optional[global___ArmCommand] = ...,
        exit : typing.Optional[global___ExitCommand] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["arm",b"arm","command",b"command","exit",b"exit","world",b"world"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["arm",b"arm","command",b"command","exit",b"exit","id",b"id","world",b"world"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["command",b"command"]) -> typing.Optional[typing_extensions.Literal["world","arm","exit"]]: ...
global___SimCommand = SimCommand

class WorldCommand(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class Type(_Type, metaclass=_TypeEnumTypeWrapper):
        pass
    class _Type:
        V = typing.NewType('V', builtins.int)
    class _TypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Type.V], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNKNOWN = WorldCommand.Type.V(0)
        RESET = WorldCommand.Type.V(1)

    UNKNOWN = WorldCommand.Type.V(0)
    RESET = WorldCommand.Type.V(1)

    TYPE_FIELD_NUMBER: builtins.int
    type: global___WorldCommand.Type.V = ...
    def __init__(self,
        *,
        type : global___WorldCommand.Type.V = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["type",b"type"]) -> None: ...
global___WorldCommand = WorldCommand

class ArmCommand(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class Type(_Type, metaclass=_TypeEnumTypeWrapper):
        pass
    class _Type:
        V = typing.NewType('V', builtins.int)
    class _TypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Type.V], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNKNOWN = ArmCommand.Type.V(0)
        TO = ArmCommand.Type.V(1)

    UNKNOWN = ArmCommand.Type.V(0)
    TO = ArmCommand.Type.V(1)

    TYPE_FIELD_NUMBER: builtins.int
    TARGET_JOINT_ANGLES_FIELD_NUMBER: builtins.int
    type: global___ArmCommand.Type.V = ...
    @property
    def target_joint_angles(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.float]:
        """6 DOF joint angles"""
        pass
    def __init__(self,
        *,
        type : global___ArmCommand.Type.V = ...,
        target_joint_angles : typing.Optional[typing.Iterable[builtins.float]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["target_joint_angles",b"target_joint_angles","type",b"type"]) -> None: ...
global___ArmCommand = ArmCommand

class ExitCommand(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    def __init__(self,
        ) -> None: ...
global___ExitCommand = ExitCommand

class SimState(google.protobuf.message.Message):
    """SimState is the top level Sim status message.
    An example of serialized JSON is:
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TS_FIELD_NUMBER: builtins.int
    ARM_FIELD_NUMBER: builtins.int
    COMMAND_FIELD_NUMBER: builtins.int
    CALIBRATION_FIELD_NUMBER: builtins.int
    COLOR_CAMERA_FIELD_NUMBER: builtins.int
    ts: builtins.int = ...
    @property
    def arm(self) -> global___ArmState: ...
    @property
    def command(self) -> global___CommandState: ...
    @property
    def calibration(self) -> global___Calibration: ...
    @property
    def color_camera(self) -> global___ColorCamera: ...
    def __init__(self,
        *,
        ts : builtins.int = ...,
        arm : typing.Optional[global___ArmState] = ...,
        command : typing.Optional[global___CommandState] = ...,
        calibration : typing.Optional[global___Calibration] = ...,
        color_camera : typing.Optional[global___ColorCamera] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["arm",b"arm","calibration",b"calibration","color_camera",b"color_camera","command",b"command","state",b"state"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["arm",b"arm","calibration",b"calibration","color_camera",b"color_camera","command",b"command","state",b"state","ts",b"ts"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["state",b"state"]) -> typing.Optional[typing_extensions.Literal["arm","command","calibration","color_camera"]]: ...
global___SimState = SimState

class ArmState(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SENSED_JOINT_ANGLES_FIELD_NUMBER: builtins.int
    SENSED_POSE_FIELD_NUMBER: builtins.int
    @property
    def sensed_joint_angles(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.float]:
        """6 DOF joint angles"""
        pass
    @property
    def sensed_pose(self) -> global___Pose3D: ...
    def __init__(self,
        *,
        sensed_joint_angles : typing.Optional[typing.Iterable[builtins.float]] = ...,
        sensed_pose : typing.Optional[global___Pose3D] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["sensed_pose",b"sensed_pose"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["sensed_joint_angles",b"sensed_joint_angles","sensed_pose",b"sensed_pose"]) -> None: ...
global___ArmState = ArmState

class CommandState(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class Status(_Status, metaclass=_StatusEnumTypeWrapper):
        pass
    class _Status:
        V = typing.NewType('V', builtins.int)
    class _StatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Status.V], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNKNOWN = CommandState.Status.V(0)
        SUCCESS = CommandState.Status.V(1)
        FAIL = CommandState.Status.V(2)

    UNKNOWN = CommandState.Status.V(0)
    SUCCESS = CommandState.Status.V(1)
    FAIL = CommandState.Status.V(2)

    ID_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    MESSAGE_FIELD_NUMBER: builtins.int
    id: builtins.int = ...
    status: global___CommandState.Status.V = ...
    message: typing.Text = ...
    def __init__(self,
        *,
        id : builtins.int = ...,
        status : global___CommandState.Status.V = ...,
        message : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["id",b"id","message",b"message","status",b"status"]) -> None: ...
global___CommandState = CommandState

class ColorCamera(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    COLOR_FILE_FIELD_NUMBER: builtins.int
    color_file: typing.Text = ...
    def __init__(self,
        *,
        color_file : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["color_file",b"color_file"]) -> None: ...
global___ColorCamera = ColorCamera

class Calibration(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    LAST_MODIFIED_TS_FIELD_NUMBER: builtins.int
    JSON_FIELD_NUMBER: builtins.int
    last_modified_ts: builtins.int = ...
    json: typing.Text = ...
    def __init__(self,
        *,
        last_modified_ts : builtins.int = ...,
        json : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["json",b"json","last_modified_ts",b"last_modified_ts"]) -> None: ...
global___Calibration = Calibration

class Pose3D(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    POSITION_FIELD_NUMBER: builtins.int
    ORIENTATION_FIELD_NUMBER: builtins.int
    @property
    def position(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.float]:
        """{x, y, z} in the Cartesian space."""
        pass
    @property
    def orientation(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.float]:
        """{x, y, z, w} quaternion"""
        pass
    def __init__(self,
        *,
        position : typing.Optional[typing.Iterable[builtins.float]] = ...,
        orientation : typing.Optional[typing.Iterable[builtins.float]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["orientation",b"orientation","position",b"position"]) -> None: ...
global___Pose3D = Pose3D

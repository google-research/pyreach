# Copyright 2021 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing
import typing_extensions
import units_pb2

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class GeneralIo(google.protobuf.message.Message):
    """GeneralIo represents a set of I/O values that together abstracts the
    interaction with a hardware device or part of hardware device. For example,
    a few switches and knobs input from a control panel or several status LEDs
    output. Despite the flexibility of this type, it should be used with
    discretion. Please only use this type if the value being logged does not have
    more structure than plain I/O.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    DIGITALS_FIELD_NUMBER: builtins.int
    ANALOGS_FIELD_NUMBER: builtins.int
    @property
    def digitals(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
    @property
    def analogs(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.float]: ...
    def __init__(self,
        *,
        digitals: typing.Optional[typing.Iterable[builtins.int]] = ...,
        analogs: typing.Optional[typing.Iterable[builtins.float]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["analogs",b"analogs","digitals",b"digitals"]) -> None: ...
global___GeneralIo = GeneralIo

class GeneralIoMeta(google.protobuf.message.Message):
    """Metadata type that comes with GeneralIo. Length of analog_units should always
    equal to num_analogs.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NUM_DIGITALS_FIELD_NUMBER: builtins.int
    NUM_ANALOGS_FIELD_NUMBER: builtins.int
    ANALOG_UNITS_FIELD_NUMBER: builtins.int
    num_digitals: builtins.int
    num_analogs: builtins.int
    @property
    def analog_units(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[units_pb2.Unit.ValueType]: ...
    def __init__(self,
        *,
        num_digitals: typing.Optional[builtins.int] = ...,
        num_analogs: typing.Optional[builtins.int] = ...,
        analog_units: typing.Optional[typing.Iterable[units_pb2.Unit.ValueType]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["num_analogs",b"num_analogs","num_digitals",b"num_digitals"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["analog_units",b"analog_units","num_analogs",b"num_analogs","num_digitals",b"num_digitals"]) -> None: ...
global___GeneralIoMeta = GeneralIoMeta

# Copyright 2021 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class ObjectId(google.protobuf.message.Message):
    """----------------------------------------------------------------------------
    References to objects and coordinate frames in a simulation.

    Identify a component of a body or other entity in the scene.
    Each such object has its own coordinate frame.

    The ObjectId can be used to identify a body, link, or joint or other
    components in a simulation, such as sensors or coordinate frames.  The
    meanings of the three index fields depend on the type of object and the tool
    being used.  An object that has representations in multiple tools, such as a
    physics simulation and a renderer, will probably require separate ObjectIds
    for each tool.

    Here is an example of ObjectId usage for Bullet and SceneLoader:

      WORLD              - The world frame or global coordinate system.
      FRAME.i            - A named frame of reference.

      BODY.i             - The body with unique integer ID, i.
      LINK.i.j           - The jth link on BODY.i, where the base link is -1.
      VISUAL_SHAPE.i.j.k - The kth visual shape on LINK.i.j
      COLLISION_SHAPE.i.j.k - The kth collision shape on LINK.i.j
      JOINT.i.j          - The jth joint on BODY.i
      AXIS.i.j,k         - The kth axis on JOINT.i.j

      SHAPE.i            - The globally defined shape with unique integer ID, i.
      SENSOR.i           - The sensor with unique integer ID, i.
      CONSTRAINT.i       - The constraint with unique integer ID, i.

    The index fields (index0, index1, and index2) correspond to the i,j,k values
    described here.
    ----------------------------------------------------------------------------
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _ObjectType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ObjectTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ObjectType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED: ObjectId.ObjectType.ValueType = ...  # 0
        BODY: ObjectId.ObjectType.ValueType = ...  # 1
        """An independent physical object."""

        LINK: ObjectId.ObjectType.ValueType = ...  # 2
        """A link (a rigid piece) in a robot or assembly."""

        JOINT: ObjectId.ObjectType.ValueType = ...  # 3
        """A joint between links in a robot or assembly."""

        VISUAL_SHAPE: ObjectId.ObjectType.ValueType = ...  # 4
        """A shape that is part of a visual model."""

        COLLISION_SHAPE: ObjectId.ObjectType.ValueType = ...  # 5
        """A shape that is part of a collision model."""

        AXIS: ObjectId.ObjectType.ValueType = ...  # 6
        """An axis in a joint."""

        WORLD: ObjectId.ObjectType.ValueType = ...  # 7
        """The world coordinate frame."""

        FRAME: ObjectId.ObjectType.ValueType = ...  # 8
        """A named frame of reference."""

        LIGHT: ObjectId.ObjectType.ValueType = ...  # 9
        """A light source."""

        SENSOR: ObjectId.ObjectType.ValueType = ...  # 10
        """A camera or other sensor."""

        SHAPE: ObjectId.ObjectType.ValueType = ...  # 11
        """An abstract shape that is not part of a body."""

        CONSTRAINT: ObjectId.ObjectType.ValueType = ...  # 12
        """A constraint between two objects."""

        IMAGE: ObjectId.ObjectType.ValueType = ...  # 13
        """An image that can be used as texture or backdrop."""

        COLLISION_FILTER: ObjectId.ObjectType.ValueType = ...  # 14
        """A filter that enables or disables collision detection."""

    class ObjectType(_ObjectType, metaclass=_ObjectTypeEnumTypeWrapper):
        pass

    UNDEFINED: ObjectId.ObjectType.ValueType = ...  # 0
    BODY: ObjectId.ObjectType.ValueType = ...  # 1
    """An independent physical object."""

    LINK: ObjectId.ObjectType.ValueType = ...  # 2
    """A link (a rigid piece) in a robot or assembly."""

    JOINT: ObjectId.ObjectType.ValueType = ...  # 3
    """A joint between links in a robot or assembly."""

    VISUAL_SHAPE: ObjectId.ObjectType.ValueType = ...  # 4
    """A shape that is part of a visual model."""

    COLLISION_SHAPE: ObjectId.ObjectType.ValueType = ...  # 5
    """A shape that is part of a collision model."""

    AXIS: ObjectId.ObjectType.ValueType = ...  # 6
    """An axis in a joint."""

    WORLD: ObjectId.ObjectType.ValueType = ...  # 7
    """The world coordinate frame."""

    FRAME: ObjectId.ObjectType.ValueType = ...  # 8
    """A named frame of reference."""

    LIGHT: ObjectId.ObjectType.ValueType = ...  # 9
    """A light source."""

    SENSOR: ObjectId.ObjectType.ValueType = ...  # 10
    """A camera or other sensor."""

    SHAPE: ObjectId.ObjectType.ValueType = ...  # 11
    """An abstract shape that is not part of a body."""

    CONSTRAINT: ObjectId.ObjectType.ValueType = ...  # 12
    """A constraint between two objects."""

    IMAGE: ObjectId.ObjectType.ValueType = ...  # 13
    """An image that can be used as texture or backdrop."""

    COLLISION_FILTER: ObjectId.ObjectType.ValueType = ...  # 14
    """A filter that enables or disables collision detection."""


    OBJECT_TYPE_FIELD_NUMBER: builtins.int
    INDEX0_FIELD_NUMBER: builtins.int
    INDEX1_FIELD_NUMBER: builtins.int
    INDEX2_FIELD_NUMBER: builtins.int
    object_type: global___ObjectId.ObjectType.ValueType = ...
    index0: builtins.int = ...
    index1: builtins.int = ...
    index2: builtins.int = ...
    def __init__(self,
        *,
        object_type : global___ObjectId.ObjectType.ValueType = ...,
        index0 : typing.Optional[builtins.int] = ...,
        index1 : typing.Optional[builtins.int] = ...,
        index2 : typing.Optional[builtins.int] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_index0",b"_index0","_index1",b"_index1","_index2",b"_index2","index0",b"index0","index1",b"index1","index2",b"index2"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_index0",b"_index0","_index1",b"_index1","_index2",b"_index2","index0",b"index0","index1",b"index1","index2",b"index2","object_type",b"object_type"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_index0",b"_index0"]) -> typing.Optional[typing_extensions.Literal["index0"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_index1",b"_index1"]) -> typing.Optional[typing_extensions.Literal["index1"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_index2",b"_index2"]) -> typing.Optional[typing_extensions.Literal["index2"]]: ...
global___ObjectId = ObjectId

class ObjectIdList(google.protobuf.message.Message):
    """A list of ObjectId."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    IDS_FIELD_NUMBER: builtins.int
    @property
    def ids(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ObjectId]: ...
    def __init__(self,
        *,
        ids : typing.Optional[typing.Iterable[global___ObjectId]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["ids",b"ids"]) -> None: ...
global___ObjectIdList = ObjectIdList

# Copyright 2021 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: log_entry_batch.proto

from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import pyreach.common.proto_gen.log_entry_pb2 as log__entry__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='log_entry_batch.proto',
  package='robotics.logging',
  syntax='proto2',
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\x15log_entry_batch.proto\x12\x10robotics.logging\x1a\x0flog_entry.proto\"<\n\rLogEntryBatch\x12+\n\x07\x65ntries\x18\x01 \x03(\x0b\x32\x1a.robotics.logging.LogEntry'
  ,
  dependencies=[log__entry__pb2.DESCRIPTOR,])




_LOGENTRYBATCH = _descriptor.Descriptor(
  name='LogEntryBatch',
  full_name='robotics.logging.LogEntryBatch',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='entries', full_name='robotics.logging.LogEntryBatch.entries', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=60,
  serialized_end=120,
)

_LOGENTRYBATCH.fields_by_name['entries'].message_type = log__entry__pb2._LOGENTRY
DESCRIPTOR.message_types_by_name['LogEntryBatch'] = _LOGENTRYBATCH
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

LogEntryBatch = _reflection.GeneratedProtocolMessageType('LogEntryBatch', (_message.Message,), {
  'DESCRIPTOR' : _LOGENTRYBATCH,
  '__module__' : 'log_entry_batch_pb2'
  # @@protoc_insertion_point(class_scope:robotics.logging.LogEntryBatch)
  })
_sym_db.RegisterMessage(LogEntryBatch)


# @@protoc_insertion_point(module_scope)

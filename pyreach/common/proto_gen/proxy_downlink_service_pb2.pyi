# Copyright 2021 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class ProxyRobotCommand(google.protobuf.message.Message):
    """ProxyRobotCommand is the top level command sent to the proxy adapter.
    Examples of serialized JSON are:
      {"id":"1","enable_motion":{}}
      {"id":"1","world":{"type":"RESET"}}
      {"id":"1","arm":{"type":"TO","target_joint_angles":[0,0,0,0,0,0,0]}}
      {"id":"1","arm":{"type":"LINEAR_TO","target_joint_angles":[0,0,0,0,0,0,0]}}
      {"id":"1","arm":{"type":"LINEAR_TO","target_joint_angles":[0,0,0,0,0,0,0],
       "goal_wrench":{"force":[0,0,0],"torque":[0,0,0]}}}
      {"id":"1","arm":{"type":"LINEAR_TO","target_joint_angles":[0,0,0,0,0,0,0],
       "goal_wrench":{"force":[0,0,0],"torque":[0,0,0]},"max_velocity":1.0}}
      {"id":"1","arm":{"type":"STOP"}}
      {"id":"1","gripper":{"target_joint_angle":0}}
      {"id":"1","head":{"type":"TO","target_joint_angles":[0,0]}}
      {"id":"1","base":{"translation":1}}
      {"id":"1","exit":{}}
      {"id":"1","annotation":{"type":"START_SESSION"}}
      {"id":"1","annotation":{"type":"END_SESSION"}}
      {"id":"1","annotation":{"type":"START_TASK","name":"Pick"}}
      {"id":"1","annotation":{"type":"END_TASK","success":true}}
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ID_FIELD_NUMBER: builtins.int
    ENABLE_MOTION_FIELD_NUMBER: builtins.int
    WORLD_FIELD_NUMBER: builtins.int
    ARM_FIELD_NUMBER: builtins.int
    GRIPPER_FIELD_NUMBER: builtins.int
    HEAD_FIELD_NUMBER: builtins.int
    BASE_FIELD_NUMBER: builtins.int
    EXIT_FIELD_NUMBER: builtins.int
    ANNOTATION_FIELD_NUMBER: builtins.int
    SPEECH_FIELD_NUMBER: builtins.int
    id: builtins.int = ...
    @property
    def enable_motion(self) -> global___EnableMotionCommand: ...
    @property
    def world(self) -> global___WorldCommand: ...
    @property
    def arm(self) -> global___ArmCommand: ...
    @property
    def gripper(self) -> global___GripperCommand: ...
    @property
    def head(self) -> global___HeadCommand: ...
    @property
    def base(self) -> global___BaseCommand: ...
    @property
    def exit(self) -> global___ExitCommand: ...
    @property
    def annotation(self) -> global___AnnotationCommand: ...
    @property
    def speech(self) -> global___Speech: ...
    def __init__(self,
        *,
        id : builtins.int = ...,
        enable_motion : typing.Optional[global___EnableMotionCommand] = ...,
        world : typing.Optional[global___WorldCommand] = ...,
        arm : typing.Optional[global___ArmCommand] = ...,
        gripper : typing.Optional[global___GripperCommand] = ...,
        head : typing.Optional[global___HeadCommand] = ...,
        base : typing.Optional[global___BaseCommand] = ...,
        exit : typing.Optional[global___ExitCommand] = ...,
        annotation : typing.Optional[global___AnnotationCommand] = ...,
        speech : typing.Optional[global___Speech] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["annotation",b"annotation","arm",b"arm","base",b"base","command",b"command","enable_motion",b"enable_motion","exit",b"exit","gripper",b"gripper","head",b"head","speech",b"speech","world",b"world"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["annotation",b"annotation","arm",b"arm","base",b"base","command",b"command","enable_motion",b"enable_motion","exit",b"exit","gripper",b"gripper","head",b"head","id",b"id","speech",b"speech","world",b"world"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["command",b"command"]) -> typing.Optional[typing_extensions.Literal["enable_motion","world","arm","gripper","head","base","exit","annotation","speech"]]: ...
global___ProxyRobotCommand = ProxyRobotCommand

class ProxyRobotState(google.protobuf.message.Message):
    """ProxyRobotState is the top level proxy robot status message.
    An example of serialized JSON is:
     {"ts":"1",
      "state":"ON",
      "arm":{"sensed_joint_angles":[0,0,0,0,0,0,0],
             "sensed_pose":{"position":[0,0,0],"orientation":[0,0,0,0]},
             "last_completed_command": {"id": "0"}},
      "gripper":{"sensed_joint_angle":0,
                 "last_completed_command":{"id":"0"}},
      "head":{"sensed_joint_angles":[0.0, 0.0],
              "sensed_pose":{"position":[0,0,1],"orientation":[0,0,0,0]},
              "last_completed_command":{"id":"0"}},
      "base":{"last_completed_command":{"id":"0"}},
      "calibration": {"last_modified_ts": 1234, "json": "..."}
     }
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _State:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_State.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNKNOWN: ProxyRobotState.State.ValueType = ...  # 0
        OFF: ProxyRobotState.State.ValueType = ...  # 1
        ON: ProxyRobotState.State.ValueType = ...  # 2
        FAULT: ProxyRobotState.State.ValueType = ...  # 3
    class State(_State, metaclass=_StateEnumTypeWrapper):
        pass

    UNKNOWN: ProxyRobotState.State.ValueType = ...  # 0
    OFF: ProxyRobotState.State.ValueType = ...  # 1
    ON: ProxyRobotState.State.ValueType = ...  # 2
    FAULT: ProxyRobotState.State.ValueType = ...  # 3

    TS_FIELD_NUMBER: builtins.int
    STATE_FIELD_NUMBER: builtins.int
    ARM_FIELD_NUMBER: builtins.int
    GRIPPER_FIELD_NUMBER: builtins.int
    HEAD_FIELD_NUMBER: builtins.int
    BASE_FIELD_NUMBER: builtins.int
    COMMAND_FIELD_NUMBER: builtins.int
    CALIBRATION_FIELD_NUMBER: builtins.int
    INSTRUCTION_FIELD_NUMBER: builtins.int
    CAMERA_FIELD_NUMBER: builtins.int
    SUCCESS_DETECTION_FIELD_NUMBER: builtins.int
    SPEECH_FIELD_NUMBER: builtins.int
    ts: builtins.int = ...
    state: global___ProxyRobotState.State.ValueType = ...
    @property
    def arm(self) -> global___ArmState: ...
    @property
    def gripper(self) -> global___GripperState: ...
    @property
    def head(self) -> global___HeadState: ...
    @property
    def base(self) -> global___BaseState: ...
    @property
    def command(self) -> global___CommandState: ...
    @property
    def calibration(self) -> global___Calibration: ...
    @property
    def instruction(self) -> global___Instruction: ...
    @property
    def camera(self) -> global___CameraState: ...
    @property
    def success_detection(self) -> global___SuccessDetection: ...
    @property
    def speech(self) -> global___Speech: ...
    def __init__(self,
        *,
        ts : builtins.int = ...,
        state : global___ProxyRobotState.State.ValueType = ...,
        arm : typing.Optional[global___ArmState] = ...,
        gripper : typing.Optional[global___GripperState] = ...,
        head : typing.Optional[global___HeadState] = ...,
        base : typing.Optional[global___BaseState] = ...,
        command : typing.Optional[global___CommandState] = ...,
        calibration : typing.Optional[global___Calibration] = ...,
        instruction : typing.Optional[global___Instruction] = ...,
        camera : typing.Optional[global___CameraState] = ...,
        success_detection : typing.Optional[global___SuccessDetection] = ...,
        speech : typing.Optional[global___Speech] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["arm",b"arm","base",b"base","calibration",b"calibration","camera",b"camera","command",b"command","gripper",b"gripper","head",b"head","instruction",b"instruction","speech",b"speech","success_detection",b"success_detection"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["arm",b"arm","base",b"base","calibration",b"calibration","camera",b"camera","command",b"command","gripper",b"gripper","head",b"head","instruction",b"instruction","speech",b"speech","state",b"state","success_detection",b"success_detection","ts",b"ts"]) -> None: ...
global___ProxyRobotState = ProxyRobotState

class CommandState(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Status:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Status.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNKNOWN: CommandState.Status.ValueType = ...  # 0
        SUCCESS: CommandState.Status.ValueType = ...  # 1
        FAIL: CommandState.Status.ValueType = ...  # 2
    class Status(_Status, metaclass=_StatusEnumTypeWrapper):
        pass

    UNKNOWN: CommandState.Status.ValueType = ...  # 0
    SUCCESS: CommandState.Status.ValueType = ...  # 1
    FAIL: CommandState.Status.ValueType = ...  # 2

    ID_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    MESSAGE_FIELD_NUMBER: builtins.int
    id: builtins.int = ...
    status: global___CommandState.Status.ValueType = ...
    message: typing.Text = ...
    def __init__(self,
        *,
        id : builtins.int = ...,
        status : global___CommandState.Status.ValueType = ...,
        message : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["id",b"id","message",b"message","status",b"status"]) -> None: ...
global___CommandState = CommandState

class WorldCommand(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Type:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _TypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Type.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNKNOWN: WorldCommand.Type.ValueType = ...  # 0
        RESET: WorldCommand.Type.ValueType = ...  # 1
        SAVE: WorldCommand.Type.ValueType = ...  # 2
        """Take snapshot of the current world.
        Note, currently saving world-state is supported only in sim.
        """

    class Type(_Type, metaclass=_TypeEnumTypeWrapper):
        pass

    UNKNOWN: WorldCommand.Type.ValueType = ...  # 0
    RESET: WorldCommand.Type.ValueType = ...  # 1
    SAVE: WorldCommand.Type.ValueType = ...  # 2
    """Take snapshot of the current world.
    Note, currently saving world-state is supported only in sim.
    """


    TYPE_FIELD_NUMBER: builtins.int
    SCENE_NAME_FIELD_NUMBER: builtins.int
    type: global___WorldCommand.Type.ValueType = ...
    scene_name: typing.Text = ...
    """Name used to identify a saved world-scene.
    Used only when type is `SAVE`.
    """

    def __init__(self,
        *,
        type : global___WorldCommand.Type.ValueType = ...,
        scene_name : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_scene_name",b"_scene_name","scene_name",b"scene_name"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_scene_name",b"_scene_name","scene_name",b"scene_name","type",b"type"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_scene_name",b"_scene_name"]) -> typing.Optional[typing_extensions.Literal["scene_name"]]: ...
global___WorldCommand = WorldCommand

class EnableMotionCommand(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    def __init__(self,
        ) -> None: ...
global___EnableMotionCommand = EnableMotionCommand

class EnableMotionState(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    def __init__(self,
        ) -> None: ...
global___EnableMotionState = EnableMotionState

class ArmCommand(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Type:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _TypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Type.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNKNOWN: ArmCommand.Type.ValueType = ...  # 0
        TO: ArmCommand.Type.ValueType = ...  # 1
        STOP: ArmCommand.Type.ValueType = ...  # 2
        LINEAR_TO: ArmCommand.Type.ValueType = ...  # 3
        PRIMITIVE_TO: ArmCommand.Type.ValueType = ...  # 4
    class Type(_Type, metaclass=_TypeEnumTypeWrapper):
        pass

    UNKNOWN: ArmCommand.Type.ValueType = ...  # 0
    TO: ArmCommand.Type.ValueType = ...  # 1
    STOP: ArmCommand.Type.ValueType = ...  # 2
    LINEAR_TO: ArmCommand.Type.ValueType = ...  # 3
    PRIMITIVE_TO: ArmCommand.Type.ValueType = ...  # 4

    TYPE_FIELD_NUMBER: builtins.int
    TARGET_JOINT_ANGLES_FIELD_NUMBER: builtins.int
    GOAL_WRENCH_FIELD_NUMBER: builtins.int
    MAX_VELOCITY_FIELD_NUMBER: builtins.int
    type: global___ArmCommand.Type.ValueType = ...
    @property
    def target_joint_angles(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.float]:
        """7 DOF joint angles"""
        pass
    @property
    def goal_wrench(self) -> global___Wrench:
        """Target wrench to apply."""
        pass
    max_velocity: builtins.float = ...
    """In going from the current joint position to the target, this is the
    highest velocity across all joints.
    """

    def __init__(self,
        *,
        type : global___ArmCommand.Type.ValueType = ...,
        target_joint_angles : typing.Optional[typing.Iterable[builtins.float]] = ...,
        goal_wrench : typing.Optional[global___Wrench] = ...,
        max_velocity : builtins.float = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["goal_wrench",b"goal_wrench"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["goal_wrench",b"goal_wrench","max_velocity",b"max_velocity","target_joint_angles",b"target_joint_angles","type",b"type"]) -> None: ...
global___ArmCommand = ArmCommand

class ArmState(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SENSED_JOINT_ANGLES_FIELD_NUMBER: builtins.int
    SENSED_POSE_FIELD_NUMBER: builtins.int
    @property
    def sensed_joint_angles(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.float]:
        """7 DOF joint angles"""
        pass
    @property
    def sensed_pose(self) -> global___Pose3D: ...
    def __init__(self,
        *,
        sensed_joint_angles : typing.Optional[typing.Iterable[builtins.float]] = ...,
        sensed_pose : typing.Optional[global___Pose3D] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["sensed_pose",b"sensed_pose"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["sensed_joint_angles",b"sensed_joint_angles","sensed_pose",b"sensed_pose"]) -> None: ...
global___ArmState = ArmState

class GripperCommand(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TARGET_JOINT_ANGLE_FIELD_NUMBER: builtins.int
    target_joint_angle: builtins.float = ...
    def __init__(self,
        *,
        target_joint_angle : builtins.float = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["target_joint_angle",b"target_joint_angle"]) -> None: ...
global___GripperCommand = GripperCommand

class GripperState(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SENSED_JOINT_ANGLE_FIELD_NUMBER: builtins.int
    sensed_joint_angle: builtins.float = ...
    def __init__(self,
        *,
        sensed_joint_angle : builtins.float = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["sensed_joint_angle",b"sensed_joint_angle"]) -> None: ...
global___GripperState = GripperState

class HeadCommand(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Type:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _TypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Type.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNKNOWN: HeadCommand.Type.ValueType = ...  # 0
        TO: HeadCommand.Type.ValueType = ...  # 1
        LOOK_AT: HeadCommand.Type.ValueType = ...  # 2
    class Type(_Type, metaclass=_TypeEnumTypeWrapper):
        pass

    UNKNOWN: HeadCommand.Type.ValueType = ...  # 0
    TO: HeadCommand.Type.ValueType = ...  # 1
    LOOK_AT: HeadCommand.Type.ValueType = ...  # 2

    TYPE_FIELD_NUMBER: builtins.int
    TARGET_JOINT_ANGLES_FIELD_NUMBER: builtins.int
    type: global___HeadCommand.Type.ValueType = ...
    @property
    def target_joint_angles(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.float]:
        """2 DOF joint angles {pan, tilt}.
        Only used with the TO command.
        """
        pass
    def __init__(self,
        *,
        type : global___HeadCommand.Type.ValueType = ...,
        target_joint_angles : typing.Optional[typing.Iterable[builtins.float]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["target_joint_angles",b"target_joint_angles","type",b"type"]) -> None: ...
global___HeadCommand = HeadCommand

class HeadState(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SENSED_JOINT_ANGLES_FIELD_NUMBER: builtins.int
    SENSED_POSE_FIELD_NUMBER: builtins.int
    @property
    def sensed_joint_angles(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.float]:
        """2 DOF joint angles {pan, tilt}"""
        pass
    @property
    def sensed_pose(self) -> global___Pose3D: ...
    def __init__(self,
        *,
        sensed_joint_angles : typing.Optional[typing.Iterable[builtins.float]] = ...,
        sensed_pose : typing.Optional[global___Pose3D] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["sensed_pose",b"sensed_pose"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["sensed_joint_angles",b"sensed_joint_angles","sensed_pose",b"sensed_pose"]) -> None: ...
global___HeadState = HeadState

class BaseCommand(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TRANSLATION_FIELD_NUMBER: builtins.int
    ROTATION_FIELD_NUMBER: builtins.int
    translation: builtins.float = ...
    rotation: builtins.float = ...
    def __init__(self,
        *,
        translation : builtins.float = ...,
        rotation : builtins.float = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["rotation",b"rotation","translation",b"translation"]) -> None: ...
global___BaseCommand = BaseCommand

class BaseState(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    def __init__(self,
        ) -> None: ...
global___BaseState = BaseState

class ExitCommand(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    def __init__(self,
        ) -> None: ...
global___ExitCommand = ExitCommand

class AnnotationCommand(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Type:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _TypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Type.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNKNOWN: AnnotationCommand.Type.ValueType = ...  # 0
        START_SESSION: AnnotationCommand.Type.ValueType = ...  # 1
        END_SESSION: AnnotationCommand.Type.ValueType = ...  # 2
        START_TASK: AnnotationCommand.Type.ValueType = ...  # 3
        END_TASK: AnnotationCommand.Type.ValueType = ...  # 4
    class Type(_Type, metaclass=_TypeEnumTypeWrapper):
        pass

    UNKNOWN: AnnotationCommand.Type.ValueType = ...  # 0
    START_SESSION: AnnotationCommand.Type.ValueType = ...  # 1
    END_SESSION: AnnotationCommand.Type.ValueType = ...  # 2
    START_TASK: AnnotationCommand.Type.ValueType = ...  # 3
    END_TASK: AnnotationCommand.Type.ValueType = ...  # 4

    TYPE_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    CODE_FIELD_NUMBER: builtins.int
    SUCCESS_FIELD_NUMBER: builtins.int
    type: global___AnnotationCommand.Type.ValueType = ...
    name: typing.Text = ...
    code: typing.Text = ...
    success: builtins.bool = ...
    def __init__(self,
        *,
        type : global___AnnotationCommand.Type.ValueType = ...,
        name : typing.Text = ...,
        code : typing.Text = ...,
        success : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["code",b"code","name",b"name","success",b"success","type",b"type"]) -> None: ...
global___AnnotationCommand = AnnotationCommand

class Speech(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TEXT_FIELD_NUMBER: builtins.int
    text: typing.Text = ...
    def __init__(self,
        *,
        text : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["text",b"text"]) -> None: ...
global___Speech = Speech

class Pose3D(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    POSITION_FIELD_NUMBER: builtins.int
    ORIENTATION_FIELD_NUMBER: builtins.int
    @property
    def position(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.float]:
        """{x, y, z} in the Cartesian space."""
        pass
    @property
    def orientation(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.float]:
        """{w, x, y, z} quaternion"""
        pass
    def __init__(self,
        *,
        position : typing.Optional[typing.Iterable[builtins.float]] = ...,
        orientation : typing.Optional[typing.Iterable[builtins.float]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["orientation",b"orientation","position",b"position"]) -> None: ...
global___Pose3D = Pose3D

class Calibration(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    LAST_MODIFIED_TS_FIELD_NUMBER: builtins.int
    JSON_FIELD_NUMBER: builtins.int
    last_modified_ts: builtins.int = ...
    json: typing.Text = ...
    def __init__(self,
        *,
        last_modified_ts : builtins.int = ...,
        json : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["json",b"json","last_modified_ts",b"last_modified_ts"]) -> None: ...
global___Calibration = Calibration

class Instruction(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TEXT_FIELD_NUMBER: builtins.int
    text: typing.Text = ...
    def __init__(self,
        *,
        text : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["text",b"text"]) -> None: ...
global___Instruction = Instruction

class SuccessDetection(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SUCCESS_FIELD_NUMBER: builtins.int
    success: builtins.bool = ...
    def __init__(self,
        *,
        success : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["success",b"success"]) -> None: ...
global___SuccessDetection = SuccessDetection

class Wrench(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FORCE_FIELD_NUMBER: builtins.int
    TORQUE_FIELD_NUMBER: builtins.int
    @property
    def force(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.float]:
        """Force limit in Newton in {x, y, z} direction."""
        pass
    @property
    def torque(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.float]:
        """Torque limit in N*m in {x, y, z} direction (right hand)."""
        pass
    def __init__(self,
        *,
        force : typing.Optional[typing.Iterable[builtins.float]] = ...,
        torque : typing.Optional[typing.Iterable[builtins.float]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["force",b"force","torque",b"torque"]) -> None: ...
global___Wrench = Wrench

class CameraState(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TS_FIELD_NUMBER: builtins.int
    COLS_FIELD_NUMBER: builtins.int
    ROWS_FIELD_NUMBER: builtins.int
    COLOR_FILE_FIELD_NUMBER: builtins.int
    DEPTH_FILE_FIELD_NUMBER: builtins.int
    ts: builtins.int = ...
    cols: builtins.int = ...
    rows: builtins.int = ...
    color_file: typing.Text = ...
    depth_file: typing.Text = ...
    def __init__(self,
        *,
        ts : builtins.int = ...,
        cols : builtins.int = ...,
        rows : builtins.int = ...,
        color_file : typing.Text = ...,
        depth_file : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["color_file",b"color_file","cols",b"cols","depth_file",b"depth_file","rows",b"rows","ts",b"ts"]) -> None: ...
global___CameraState = CameraState

# Copyright 2021 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class TickingTimestamp(google.protobuf.message.Message):
    """A timestamp likely from the internal clock of hardware devices.  We store the
    raw data from the device in this proto.  This timestamp should not be used
    for actual computation other than timestamp analysis such as drift.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _TickType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _TickTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_TickType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNSPECIFIED_TICK_TYPE: TickingTimestamp.TickType.ValueType = ...  # 0
        NANOSECOND: TickingTimestamp.TickType.ValueType = ...  # 1
        MICROSECOND: TickingTimestamp.TickType.ValueType = ...  # 2
        SECOND: TickingTimestamp.TickType.ValueType = ...  # 4
    class TickType(_TickType, metaclass=_TickTypeEnumTypeWrapper):
        pass

    UNSPECIFIED_TICK_TYPE: TickingTimestamp.TickType.ValueType = ...  # 0
    NANOSECOND: TickingTimestamp.TickType.ValueType = ...  # 1
    MICROSECOND: TickingTimestamp.TickType.ValueType = ...  # 2
    SECOND: TickingTimestamp.TickType.ValueType = ...  # 4

    class _TimeBase:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _TimeBaseEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_TimeBase.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNSPECIFIED_TIME_BASE: TickingTimestamp.TimeBase.ValueType = ...  # 0
        UNIX_EPOCH: TickingTimestamp.TimeBase.ValueType = ...  # 1
    class TimeBase(_TimeBase, metaclass=_TimeBaseEnumTypeWrapper):
        pass

    UNSPECIFIED_TIME_BASE: TickingTimestamp.TimeBase.ValueType = ...  # 0
    UNIX_EPOCH: TickingTimestamp.TimeBase.ValueType = ...  # 1

    TIME_BASE_FIELD_NUMBER: builtins.int
    TICK_TYPE_FIELD_NUMBER: builtins.int
    TICKS_FIELD_NUMBER: builtins.int
    time_base: global___TickingTimestamp.TimeBase.ValueType = ...
    tick_type: global___TickingTimestamp.TickType.ValueType = ...
    ticks: builtins.int = ...
    def __init__(self,
        *,
        time_base : typing.Optional[global___TickingTimestamp.TimeBase.ValueType] = ...,
        tick_type : typing.Optional[global___TickingTimestamp.TickType.ValueType] = ...,
        ticks : typing.Optional[builtins.int] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["tick_type",b"tick_type","ticks",b"ticks","time_base",b"time_base"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["tick_type",b"tick_type","ticks",b"ticks","time_base",b"time_base"]) -> None: ...
global___TickingTimestamp = TickingTimestamp

class EventTimestamp(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _EventType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _EventTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_EventType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNSPECIFIED_EVENT_TYPE: EventTimestamp.EventType.ValueType = ...  # 0
        DEVICE_ACQ: EventTimestamp.EventType.ValueType = ...  # 1
        """Device acquisition."""

        HOST_ACQ: EventTimestamp.EventType.ValueType = ...  # 2
        """Acquisition on the local machine host."""

        HOST_PUB: EventTimestamp.EventType.ValueType = ...  # 3
        """Sensor data sent from host over network."""

        DEVICE_PUB: EventTimestamp.EventType.ValueType = ...  # 4
        """Sensor data sent from device over network."""

        HOST_SUB: EventTimestamp.EventType.ValueType = ...  # 5
        """Sensor data received over network."""

        SYNC: EventTimestamp.EventType.ValueType = ...  # 6
        """Sync."""

    class EventType(_EventType, metaclass=_EventTypeEnumTypeWrapper):
        pass

    UNSPECIFIED_EVENT_TYPE: EventTimestamp.EventType.ValueType = ...  # 0
    DEVICE_ACQ: EventTimestamp.EventType.ValueType = ...  # 1
    """Device acquisition."""

    HOST_ACQ: EventTimestamp.EventType.ValueType = ...  # 2
    """Acquisition on the local machine host."""

    HOST_PUB: EventTimestamp.EventType.ValueType = ...  # 3
    """Sensor data sent from host over network."""

    DEVICE_PUB: EventTimestamp.EventType.ValueType = ...  # 4
    """Sensor data sent from device over network."""

    HOST_SUB: EventTimestamp.EventType.ValueType = ...  # 5
    """Sensor data received over network."""

    SYNC: EventTimestamp.EventType.ValueType = ...  # 6
    """Sync."""


    TIMESTAMP_FIELD_NUMBER: builtins.int
    TICKING_TIMESTAMP_FIELD_NUMBER: builtins.int
    EVENT_TYPE_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    HOSTNAME_FIELD_NUMBER: builtins.int
    @property
    def timestamp(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def ticking_timestamp(self) -> global___TickingTimestamp: ...
    event_type: global___EventTimestamp.EventType.ValueType = ...
    description: typing.Text = ...
    hostname: typing.Text = ...
    def __init__(self,
        *,
        timestamp : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ticking_timestamp : typing.Optional[global___TickingTimestamp] = ...,
        event_type : typing.Optional[global___EventTimestamp.EventType.ValueType] = ...,
        description : typing.Optional[typing.Text] = ...,
        hostname : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["description",b"description","event_type",b"event_type","hostname",b"hostname","ticking_timestamp",b"ticking_timestamp","timestamp",b"timestamp","timestamp_oneof",b"timestamp_oneof"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["description",b"description","event_type",b"event_type","hostname",b"hostname","ticking_timestamp",b"ticking_timestamp","timestamp",b"timestamp","timestamp_oneof",b"timestamp_oneof"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["timestamp_oneof",b"timestamp_oneof"]) -> typing.Optional[typing_extensions.Literal["timestamp","ticking_timestamp"]]: ...
global___EventTimestamp = EventTimestamp

# Copyright 2021 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class Stats(google.protobuf.message.Message):
    """For duration type, the double values below are nanoseconds."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class Quantile(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        QUANTILE_FIELD_NUMBER: builtins.int
        SAMPLE_FIELD_NUMBER: builtins.int
        quantile: builtins.float = ...
        sample: builtins.float = ...
        def __init__(self,
            *,
            quantile : builtins.float = ...,
            sample : builtins.float = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["quantile",b"quantile","sample",b"sample"]) -> None: ...

    COUNT_FIELD_NUMBER: builtins.int
    STORED_COUNT_FIELD_NUMBER: builtins.int
    MEAN_FIELD_NUMBER: builtins.int
    STDEV_FIELD_NUMBER: builtins.int
    MIN_FIELD_NUMBER: builtins.int
    MAX_FIELD_NUMBER: builtins.int
    QUANTILES_FIELD_NUMBER: builtins.int
    RMS_FIELD_NUMBER: builtins.int
    count: builtins.int = ...
    stored_count: builtins.int = ...
    mean: builtins.float = ...
    stdev: builtins.float = ...
    min: builtins.float = ...
    max: builtins.float = ...
    @property
    def quantiles(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Stats.Quantile]: ...
    rms: builtins.float = ...
    def __init__(self,
        *,
        count : builtins.int = ...,
        stored_count : builtins.int = ...,
        mean : typing.Optional[builtins.float] = ...,
        stdev : typing.Optional[builtins.float] = ...,
        min : typing.Optional[builtins.float] = ...,
        max : typing.Optional[builtins.float] = ...,
        quantiles : typing.Optional[typing.Iterable[global___Stats.Quantile]] = ...,
        rms : typing.Optional[builtins.float] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_max",b"_max","_mean",b"_mean","_min",b"_min","_rms",b"_rms","_stdev",b"_stdev","max",b"max","mean",b"mean","min",b"min","rms",b"rms","stdev",b"stdev"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_max",b"_max","_mean",b"_mean","_min",b"_min","_rms",b"_rms","_stdev",b"_stdev","count",b"count","max",b"max","mean",b"mean","min",b"min","quantiles",b"quantiles","rms",b"rms","stdev",b"stdev","stored_count",b"stored_count"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max",b"_max"]) -> typing.Optional[typing_extensions.Literal["max"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_mean",b"_mean"]) -> typing.Optional[typing_extensions.Literal["mean"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_min",b"_min"]) -> typing.Optional[typing_extensions.Literal["min"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_rms",b"_rms"]) -> typing.Optional[typing_extensions.Literal["rms"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_stdev",b"_stdev"]) -> typing.Optional[typing_extensions.Literal["stdev"]]: ...
global___Stats = Stats
